kind: pipeline
type: docker
name: deploy-to-droplet

trigger:
  branch:
    - main

steps:
  - name: deploy
    image: alpine:latest
    environment:
      DROPLET_HOST:
        from_secret: droplet_host
      DROPLET_USER:
        from_secret: droplet_user
      SSH_PRIVATE_KEY:
        from_secret: ssh_private_key
    commands:
      - apk add --no-cache openssh-client git
      - mkdir -p ~/.ssh
      - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -H $DROPLET_HOST >> ~/.ssh/known_hosts
      - |
        ssh $DROPLET_USER@$DROPLET_HOST << 'EOF'
        set -e

        # If target directory doesn't exist, create it and try to clone the repo (HTTPS)
        if [ ! -d /var/www/portfolio ]; then
          echo "/var/www/portfolio does not exist. Creating..."
          sudo mkdir -p /var/www/portfolio
          # Try to make the directory writable for the current user so git can operate
          sudo chown $(whoami):$(whoami) /var/www/portfolio || true
          cd /var/www/portfolio || exit 1

          # If it's an empty folder, attempt to clone via HTTPS (use a public URL or adjust as needed)
          if [ -z "$(ls -A)" ]; then
            echo "Directory is empty â€” attempting git clone from GitHub (HTTPS)."
            if ! git clone https://github.com/NelakaWith/portfolio.git .; then
              echo "Git clone failed. If your repository is private, you must set up SSH keys on the server or adjust the clone method." >&2
              exit 1
            fi
          fi
        else
          # Directory exists: change into it (fail if cannot)
          cd /var/www/portfolio || exit 1

          # If it's a git repo, fetch latest; otherwise attempt to initialize from origin
          if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
            git fetch --all
            git reset --hard origin/main
          else
            echo "Directory exists but is not a git repo. Attempting clone into it (may fail if not empty)."
            if [ -z "$(ls -A)" ]; then
              if ! git clone https://github.com/NelakaWith/portfolio.git .; then
                echo "Git clone failed. Aborting." >&2
                exit 1
              fi
            else
              echo "Directory not empty and not a git repo. Please inspect the server." >&2
              exit 1
            fi
          fi
        fi

        # Install dependencies and build
        npm install
        npm run build

        # Backup current live folder
        timestamp=$(date +%Y%m%d%H%M%S)
        if [ -d /var/www/portfolio-live ]; then
          sudo mv /var/www/portfolio-live "/var/www/portfolio-live-backup-$timestamp"
        fi

        # Copy build to new live folder
        sudo mkdir -p /var/www/portfolio-live
        sudo cp -r dist/* /var/www/portfolio-live/

        # Set correct permissions (optional)
        sudo chown -R www-data:www-data /var/www/portfolio-live

        # Reload nginx
        sudo systemctl reload nginx
        EOF
