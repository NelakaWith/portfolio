kind: pipeline
type: docker
name: deploy-to-droplet

trigger:
  branch:
    - main
  event:
    - push

steps:
  - name: build
    image: node:18-alpine
    commands:
      - npm install
      - npm run build

  - name: deploy
    image: alpine:latest
    depends_on:
      - build
    environment:
      DROPLET_HOST:
        from_secret: droplet_host
      DROPLET_USER:
        from_secret: droplet_user
      SSH_PRIVATE_KEY:
        from_secret: ssh_private_key
    commands:
      - apk add --no-cache openssh-client rsync
      - mkdir -p ~/.ssh
      - echo "$${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - ssh-keyscan -H "$${DROPLET_HOST}" >> ~/.ssh/known_hosts
      - |
        # Backup current live folder on server
        ssh $${DROPLET_USER}@$${DROPLET_HOST} "
          timestamp=\$(date +%Y%m%d%H%M%S)
          if [ -d /var/www/portfolio-live ]; then
            sudo mv /var/www/portfolio-live /var/www/portfolio-live-backup-\$timestamp
          fi
          sudo mkdir -p /var/www/portfolio-live
        "
      - |
        # Copy build files to server
        rsync -avz --delete dist/ $${DROPLET_USER}@$${DROPLET_HOST}:/tmp/portfolio-build/
      - |
        # Move files to live location and set permissions
        ssh $${DROPLET_USER}@$${DROPLET_HOST} "
          sudo cp -r /tmp/portfolio-build/* /var/www/portfolio-live/
          sudo chown -R www-data:www-data /var/www/portfolio-live
          sudo systemctl reload nginx
          rm -rf /tmp/portfolio-build
        "
